
// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview Describes objects present in a room based on uploaded photos.
 *
 * - describeRoomObjects - A function that takes room photos and returns a list of object names.
 * - DescribeRoomObjectsInput - The input type for the describeRoomObjects function.
 * - DescribeRoomObjectsOutput - The return type for the describeRoomObjects function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const DescribeRoomObjectsInputSchema = z.object({
  photoDataUris: z
    .array(z.string())
    .describe(
      'An array of photo URLs of a room. These URLs should be publicly accessible or signed URLs that the AI model can retrieve.'
    ),
});
export type DescribeRoomObjectsInput = z.infer<typeof DescribeRoomObjectsInputSchema>;

const DescribeRoomObjectsOutputSchema = z.object({
  objectNames: z
    .array(z.string())
    .describe('A list of names of all distinct objects identified in the room photos.'),
});
export type DescribeRoomObjectsOutput = z.infer<typeof DescribeRoomObjectsOutputSchema>;

export async function describeRoomObjects(
  input: DescribeRoomObjectsInput
): Promise<DescribeRoomObjectsOutput> {
  return describeRoomObjectsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'describeRoomObjectsPrompt',
  input: {schema: DescribeRoomObjectsInputSchema},
  output: {schema: DescribeRoomObjectsOutputSchema},
  prompt: `You are an expert visual inspector AI specializing in meticulously identifying and listing every single object visible in images of rooms.
Your task is to analyze the provided images of a room with extreme attention to detail.
You must identify and list the name of *every single distinct item* visible in the photos. This includes small items, decorative objects, items in the background, items partially obscured, etc. Be exhaustive, highly accurate, and comprehensive.

CRITICAL INSTRUCTIONS FOR IDENTIFYING MULTIPLE SIMILAR ITEMS (e.g., Funko Pops, figurines, books, tools):

1.  **INDIVIDUAL LISTING IS MANDATORY:** Each physically distinct item MUST be listed as a separate entry in the 'objectNames' array. Do NOT group them (e.g., do not say "three Funko Pop figures").

2.  **SPECIFIC IDENTIFICATION FIRST:** If an item's specific name, character, title, or unique identifier (like a specific model of a car or brand of a tool) is legible or clearly visually identifiable from its features, you MUST use that specific identifier in its name.
    *   Example: If you see three Funko Pop figures, and one is clearly Batman and another is Superman, list them as "Batman Funko Pop figure", "Superman Funko Pop figure".
    *   Example: For books, if titles are visible, list them like "The Great Gatsby book", "Moby Dick book".

3.  **VISUAL DIFFERENTIATION IF NAME IS UNKNOWN:** If the specific name/character/title is NOT clear or identifiable, you **MUST STILL LIST THE ITEM INDIVIDUALLY**. To differentiate it from other similar items whose specific names are also unknown, add a brief, unique visual descriptor based on color, shape, pose, or any other noticeable feature if possible.
    *   Continuing the Funko Pop example: If the third Funko Pop figure's character is unidentifiable, but it's predominantly red and holding a sword, list it as "red Funko Pop figure holding sword". If it's just a generic shape you can't name but is distinct from others, list it as "unidentified Funko Pop figure with blue hat" or "small green figurine with wings".
    *   **IT IS NOT ACCEPTABLE TO SIMPLY REPEAT THE GENERIC CATEGORY NAME** (e.g., listing "Funko Pop figure" ten times) if the items are visually distinct entities in the image. You must attempt to provide *some* distinguishing feature in the name.
    *   If, and only if, multiple items are truly visually indistinguishable from each other (e.g., five identical plain, unmarked screws of the same size), then listing the generic name multiple times (e.g., "screw", "screw", "screw", "screw", "screw") is acceptable. But for items like figurines or collectibles, this is rare.

4.  **BE EXHAUSTIVE:** Each distinct physical object should result in a separate entry in the list of object names. Your goal is a comprehensive inventory of individual items.

5.  **EXCLUSIONS:** EXCLUDE the following from your list: walls, floors, ceilings, windows, and doors. Also, exclude general structural elements unless they have distinct decorative features that make them individual items (e.g., 'ornate wooden doorframe', 'stained glass window panel', 'antique ceiling medallion'). Focus primarily on movable objects, furniture, decorations, and personal belongings within the room.

Your output must be a JSON object with a single key "objectNames" which is an array of strings (the names of the identified items). Do not provide descriptions, counts, or any other information beyond this array of names.

{{#each photoDataUris}}
Photo {{@index}}:
{{media url=this}}
{{/each}}`,
});

const describeRoomObjectsFlow = ai.defineFlow(
  {name: 'describeRoomObjectsFlow', inputSchema: DescribeRoomObjectsInputSchema, outputSchema: DescribeRoomObjectsOutputSchema},
  async input => {
    const {output} = await prompt(input);
    if (!output || !output.objectNames) {
      // Handle cases where output might be null or missing objectNames, though schema should enforce
      return { objectNames: [] };
    }
    return output;
  }
);
